{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/thalita.miquiles/Desktop/project-stock/stock-management/src/app/home/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const [products, setProducts] = useState<any[]>([]);\r\n\r\n  // Carregar os produtos do localStorage\r\n  useEffect(() => {\r\n    const storedProducts = JSON.parse(localStorage.getItem(\"products\") || \"[]\");\r\n    setProducts(storedProducts);\r\n  }, []);\r\n\r\n  // Calcular as métricas\r\n  const totalProducts = products.length;\r\n  const lowStockProducts = products.filter((product) => product.quantity <= 5).length;\r\n  const soldProducts = products.filter((product) => product.sold).length;\r\n  const inStockProducts = products.filter((product) => product.quantity > 5).length;\r\n\r\n  const data = {\r\n    labels: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\"],\r\n    datasets: [\r\n      {\r\n        label: \"Vendas\",\r\n        data: [10, 20, 30, 25, 40, 50],\r\n        borderColor: \"#FF6F00\",\r\n        backgroundColor: \"#FFCC80\",\r\n        fill: true,\r\n        borderWidth: 2,\r\n        tension: 0.4,\r\n        pointRadius: 6,\r\n        pointHoverRadius: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\" as const,\r\n        labels: {\r\n          color: \"#333\",\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          color: \"#e0e0e0\",\r\n        },\r\n      },\r\n      y: {\r\n        grid: {\r\n          color: \"#e0e0e0\",\r\n        },\r\n        ticks: {\r\n          color: \"#333\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const cardsData = [\r\n    {\r\n      title: \"Produtos Cadastrados\",\r\n      value: totalProducts,\r\n      icon: \"fas fa-box\",\r\n      bgColor: \"#D9F9D6\",\r\n      textColor: \"#4C9644\",\r\n    },\r\n    {\r\n      title: \"Produtos em Baixa\",\r\n      value: lowStockProducts,\r\n      icon: \"fas fa-arrow-down\",\r\n      bgColor: \"#FFD9B3\",\r\n      textColor: \"#D7754C\",\r\n    },\r\n    {\r\n      title: \"Produtos Vendidos\",\r\n      value: soldProducts,\r\n      icon: \"fas fa-check-circle\",\r\n      bgColor: \"#FFEBCC\",\r\n      textColor: \"#FF6F00\",\r\n    },\r\n    {\r\n      title: \"Produtos em Estoque\",\r\n      value: inStockProducts,\r\n      icon: \"fas fa-warehouse\",\r\n      bgColor: \"#C2F0E5\",\r\n      textColor: \"#4C9B8C\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-8 min-h-screen bg-gray-50\">\r\n      <h1 className=\"text-3xl text-[#4C9644] font-semibold mb-6\">Dashboard</h1>\r\n\r\n      {/* Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\r\n        {cardsData.map((card, index) => (\r\n          <div\r\n            key={index}\r\n            className={`bg-[${card.bgColor}] text-[${card.textColor}] shadow-lg rounded-lg p-6 transform hover:scale-105 transition-all duration-300 ease-in-out flex flex-col items-center justify-center w-full sm:w-76 h-48`}\r\n          >\r\n            <div className=\"text-5xl mb-4\">\r\n              <i className={card.icon}></i>\r\n            </div>\r\n            <h3 className=\"font-semibold text-lg mb-2\">{card.title}</h3>\r\n            <p className=\"text-3xl font-bold\">{card.value}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Gráfico */}\r\n      <div className=\"bg-white shadow-xl rounded-lg p-6 mt-8\">\r\n        <h2 className=\"text-2xl text-[#4C9644] font-semibold mb-6\">Gráfico de Vendas - Relatório Mensal</h2>\r\n        <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":[],"mappings":";;;;AAEA;AAGA;AADA;;;AAJA;;;;;AAgBA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,+JAAA,CAAA,gBAAa,EAAE,+JAAA,CAAA,cAAW,EAAE,+JAAA,CAAA,eAAY,EAAE,+JAAA,CAAA,cAAW,EAAE,+JAAA,CAAA,QAAK,EAAE,+JAAA,CAAA,UAAO,EAAE,+JAAA,CAAA,SAAM;AAE9F,MAAM,YAAY;;IAChB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAElD,uCAAuC;IACvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,iBAAiB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,eAAe;YACtE,YAAY;QACd;8BAAG,EAAE;IAEL,uBAAuB;IACvB,MAAM,gBAAgB,SAAS,MAAM;IACrC,MAAM,mBAAmB,SAAS,MAAM,CAAC,CAAC,UAAY,QAAQ,QAAQ,IAAI,GAAG,MAAM;IACnF,MAAM,eAAe,SAAS,MAAM,CAAC,CAAC,UAAY,QAAQ,IAAI,EAAE,MAAM;IACtE,MAAM,kBAAkB,SAAS,MAAM,CAAC,CAAC,UAAY,QAAQ,QAAQ,GAAG,GAAG,MAAM;IAEjF,MAAM,OAAO;QACX,QAAQ;YAAC;YAAO;YAAO;YAAO;YAAO;YAAO;SAAM;QAClD,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;oBAAC;oBAAI;oBAAI;oBAAI;oBAAI;oBAAI;iBAAG;gBAC9B,aAAa;gBACb,iBAAiB;gBACjB,MAAM;gBACN,aAAa;gBACb,SAAS;gBACT,aAAa;gBACb,kBAAkB;YACpB;SACD;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,SAAS;YACP,QAAQ;gBACN,UAAU;gBACV,QAAQ;oBACN,OAAO;gBACT;YACF;QACF;QACA,QAAQ;YACN,GAAG;gBACD,MAAM;oBACJ,OAAO;gBACT;YACF;YACA,GAAG;gBACD,MAAM;oBACJ,OAAO;gBACT;gBACA,OAAO;oBACL,OAAO;gBACT;YACF;QACF;IACF;IAEA,MAAM,YAAY;QAChB;YACE,OAAO;YACP,OAAO;YACP,MAAM;YACN,SAAS;YACT,WAAW;QACb;QACA;YACE,OAAO;YACP,OAAO;YACP,MAAM;YACN,SAAS;YACT,WAAW;QACb;QACA;YACE,OAAO;YACP,OAAO;YACP,MAAM;YACN,SAAS;YACT,WAAW;QACb;QACA;YACE,OAAO;YACP,OAAO;YACP,MAAM;YACN,SAAS;YACT,WAAW;QACb;KACD;IAED,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAG3D,6LAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,6LAAC;wBAEC,WAAW,CAAC,IAAI,EAAE,KAAK,OAAO,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,0JAA0J,CAAC;;0CAEnN,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAE,WAAW,KAAK,IAAI;;;;;;;;;;;0CAEzB,6LAAC;gCAAG,WAAU;0CAA8B,KAAK,KAAK;;;;;;0CACtD,6LAAC;gCAAE,WAAU;0CAAsB,KAAK,KAAK;;;;;;;uBAPxC;;;;;;;;;;0BAaX,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAC3D,6LAAC,yJAAA,CAAA,OAAI;wBAAC,MAAM;wBAAM,SAAS;;;;;;;;;;;;;;;;;;AAInC;GArHM;KAAA;uCAuHS"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}